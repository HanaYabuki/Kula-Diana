{
	"scopeName": "source.kula",
	"name": "kula",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#punctuations"
		}
	],
	"repository": {
		"variables": {
			"patterns": [
				{
					"name": "entity.name.function.kula",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*\\()"
				},
				{
					"name": "entity.name.class.kula",
					"match": "(?<=class\\s*)\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				},
				{
					"name": "support.variable.kula",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.kula",
					"match": "\\b(if|else|while|for|return|break|continue|print)\\b"
				},
				{
					"name": "keyword.kula",
					"match": "\\b(func|class|import)\\b"
				},
				{
					"name": "variable.language.kula",
					"match": "\\b(this|self|constructor|__proto__|__func__)\\b"
				},
				{
					"name": "constant.language.kula",
					"match": "\\b(null)\\b"
				}
			]
		},
		"strings": {
			"name": "string.kula",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "\\\\([0-7]{3}|[abfnrtv\\\\'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})",
					"name": "constant.character.escape.kula"
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.kula",
			"match": "\\b([0-9]+(\\.[0-9]*)?)\\b"
		},
		"comments": {
			"name": "comment.kula",
			"match": "\\#.*\n"
		},
		"operators": {
			"name": "keyword.operator.kula",
			"match": "([\\+\\-\\*\\/\\!\\=<>]|:=|==|>=|<=|and|or)"
		},
		"punctuations": {
			"name": "punctuation.kula",
			"match": "[;\\.]"
		}
	}
}